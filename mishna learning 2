function updateSpreadsheet() {
  const spreadsheetId = "1XdWQqOmaWEwYbM9qWxCb0yRa-HvhnAj1Ny0f_xUNNeY";
  const ss = SpreadsheetApp.openById(spreadsheetId);
  const sourceSheet = ss.getSheetByName("Sheet1");

  // Generate a unique sheet name
  const timestamp = new Date().getTime();
  const sheetName = `Tractate Information_${timestamp}`;
  const targetSheet = ss.insertSheet(sheetName);

  // Define headers for the sheet
  const headers = ['Order', 'Tractate', 'Total Chapters', 'Total Mishnas', 'Chapter', 'Mishnas', 'Bavli', 'Yerushalmi'];
  targetSheet.appendRow(headers);

  // Function to read tractate data from the source sheet
  function readTractateData() {
    const lastRow = sourceSheet.getLastRow();
    const tractates = [];

    for (let i = 2; i <= lastRow; i++) {
      const tractateName = sourceSheet.getRange(i, 1).getValue();
      const lastColumn = sourceSheet.getLastColumn();
      const chapterDataRange = sourceSheet.getRange(i, 2, 1, lastColumn - 1);
      const chapterDataValues = chapterDataRange.getValues()[0].filter(value => value !== "");

      const totalChapters = chapterDataValues.length;
      const totalMishnas = chapterDataValues.reduce((sum, value) => sum + value, 0);

      tractates.push({
        "Tractate": tractateName,
        "Chapters": chapterDataValues,
        "TotalChapters": totalChapters,
        "TotalMishnas": totalMishnas
      });
    }

    return tractates;
  }

  // Function to populate the target sheet with tractate data
  function populateTargetSheet(data) {
    data.forEach(tractate => {
      targetSheet.appendRow([
        "", // Order (to be filled later)
        tractate.Tractate,
        tractate.TotalChapters,
        tractate.TotalMishnas
      ]);

      tractate.Chapters.forEach((mishnaCount, chapterIndex) => {
        const chapterRow = [null, null, null, null, `Chapter ${chapterIndex + 1}`, mishnaCount, "", ""];
        targetSheet.appendRow(chapterRow);
      });

      // Conditionally append a blank row after each tractate with chapters
      if (tractate.Chapters.length > 0) {
        targetSheet.appendRow([tractate.Chapters.length]);
      }
    });
  }

  // Read tractate data and populate the target sheet
  const tractateData = readTractateData();
  populateTargetSheet(tractateData);
}

// Update the spreadsheet (assuming "Zera'im" is the first order)
updateSpreadsheet();
